name: CI/CD Pipeline Deploy to Prod

on:
  push:
    branches: [main]

jobs:
  # Job 1: Add GitHub Actions IP to Security Group
  add-ip:
    runs-on: ubuntu-latest
    steps:
      - name: Get GitHub Action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress --group-name ${{ secrets.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  # Job 2: Deploy Laravel + Vite App
  deploy:
    runs-on: ubuntu-latest
    needs: add-ip # This job runs only after 'add-ip' is completed
    steps:
      - name: Deploy to Prod Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/www/laravel_deployment
            git stash
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            npm install
            npm run build
            php artisan config:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            chown -R www-data:www-data storage bootstrap/cache
            chmod -R 775 storage bootstrap/cache
            sudo systemctl restart php8.1-fpm

  # Job 3: Remove GitHub Actions IP from Security Group
  remove-ip:
    runs-on: ubuntu-latest
    needs: deploy # This job runs only after 'deploy' is completed
    steps:
      - name: Get GitHub Action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Remove GitHub Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-name ${{ secrets.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        if: always()
